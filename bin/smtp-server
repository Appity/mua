#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path('../lib', __dir__)

require 'bundler'
require 'optparse'

Bundler.require(:default, ENV['APP_ENV']&.to_sym || :development)

require 'mua'
require 'async'
require 'logger'

# Async.logger.level = Logger::DEBUG

# == Main ===================================================================

options = {
  timeout: 30,
  silent: false
}

program = OptionParser.new do |opts|
  opts.on('-s', '--silent', 'Suppress output')
  opts.on('-t', '--timeout=TIMEOUT', 'Set SMTP command timeout (seconds)', Integer)
end

program.parse!(ARGV, into: options)

# TODO: Add Async::IO::Trap.new(:INT)
#       per https://github.com/socketry/async-io/blob/master/examples/echo/server.rb

Async do
  server = Mua::SMTP::Server.new(timeout: options[:timeout])

  unless (options[:silent])
    puts('SMTP server listening on %s:%d' % [ server.bind, server.port ])
  end
end
